apiVersion: automation.cloudbees.io/v1alpha1
kind: workflow
name: SelfTest

on:
  push:
    branches:
      - "*"

jobs:
  build:
    if: cloudbees.api.url == 'https://api.saas-preprod.beescloud.com' || cloudbees.api.url == 'https://api.cloudbees.io'
    permissions:
      scm-token-own: read
      id-token: write
    steps:
      - name: Checkout
        uses: https://github.com/cloudbees-io/checkout@v1

      - name: Self Test
        uses: docker://golang:1.23.1
        run: |
          make verify

      - name: Login to AWS
        uses: https://github.com/cloudbees-io/configure-aws-credentials@v1
        with:
          aws-region: us-east-1
          role-to-assume: ${{ vars.oidc_staging_iam_role }}
          role-duration-seconds: "3600"

      - name: Configure container registry for Staging ECR
        uses: https://github.com/cloudbees-io/configure-ecr-credentials@v1

      - name: Build image
        uses: https://github.com/cloudbees-io/kaniko@v1
        with:
          destination: 020229604682.dkr.ecr.us-east-1.amazonaws.com/actions/configure-aws-credentials:${{ cloudbees.scm.sha }},020229604682.dkr.ecr.us-east-1.amazonaws.com/actions/configure-aws-credentials:latest
          labels: maintainer=sdp-pod-3,email=engineering@cloudbees.io

  test-with-keys:
    #name: Check the action running on CBA using explicit keys
    if: cloudbees.api.url == 'https://api.saas-preprod.beescloud.com'
    needs:
      - build
    steps:
      - name: Checkout
        uses: https://github.com/cloudbees-io/checkout@v1
      - name: Compat aws
        id: login
        uses: ./.cloudbees/testing
        with:
          aws-region: ${{ vars.cloudbees_saas_test_region }}
          aws-access-key-id: ${{ vars.cloudbees_saas_test_access_key_id }}
          aws-secret-access-key: ${{ secrets.cloudbees_saas_test_secret_access_key }}
          role-to-assume: ${{ vars.cloudbees_saas_test_role_name }}
          role-duration-seconds: "3600" # need to override default of 6h as our role has 1h max
      - name: Check Output
        uses: docker://amazon/aws-cli:2.12.6
        run: |
          echo "AWS Account ID: ${{ steps.login.outputs.aws-account-id }}"
          echo "AWS Config Dir:"
          ls -l $HOME/.aws
      - name: Check auth
        uses: docker://amazon/aws-cli:2.12.6
        run: |
          aws sts get-caller-identity

  test-with-chaining:
    #name: Check authentication chaining
    if: cloudbees.api.url == 'https://api.saas-preprod.beescloud.com'
    needs:
      - build
    steps:
      - name: Checkout
        uses: https://github.com/cloudbees-io/checkout@v1

      - name: Setup
        uses: ./.cloudbees/testing
        with:
          aws-region: ${{ vars.cloudbees_saas_test_region }}
          aws-access-key-id: ${{ vars.cloudbees_saas_test_access_key_id }}
          aws-secret-access-key: ${{ secrets.cloudbees_saas_test_secret_access_key }}

      - name: Chain
        uses: ./.cloudbees/testing
        with:
          aws-region: ${{ vars.cloudbees_saas_test_region }}
          role-chaining: "true"
          role-to-assume: ${{ vars.cloudbees_saas_test_role_name }}
          role-duration-seconds: "3600" # need to override default of 6h as our role has 1h max

      - name: Check auth
        uses: docker://amazon/aws-cli:2.12.6
        run: |
          aws sts get-caller-identity

  test-with-oidc:
    #name: Check the action running on CBA using OIDC
    if: cloudbees.api.url == 'https://api.saas-preprod.beescloud.com'
    needs:
      - build
    permissions:
      scm-token-own: read
      id-token: write
    steps:
      - name: Checkout
        uses: https://github.com/cloudbees-io/checkout@v1

      - name: Compat aws
        id: login
        uses: ./.cloudbees/testing
        with:
          aws-region: ${{ vars.cloudbees_saas_test_region }}
          role-to-assume: ${{ vars.cloudbees_saas_test_role_arn }}
          role-duration-seconds: "3600" # need to override default of 6h as our role has 1h max

      - name: Check Output
        uses: docker://amazon/aws-cli:2.12.6
        run: |
          echo "AWS Account ID: ${{ steps.login.outputs.aws-account-id }}"
          echo "AWS Config Dir:"
          ls -l $HOME/.aws

      - name: Check auth
        uses: docker://amazon/aws-cli:2.12.6
        run: |
          aws sts get-caller-identity
